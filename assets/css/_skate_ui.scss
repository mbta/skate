$breakpoints: (
  "max-mobile-width": 480px,
  "max-mobile-landscape-tablet-portrait-width": 800px,
  "max-tablet-width": 1340px,
);

// #region Text Styles [v2]

// https://www.notion.so/mbta-downtown-crossing/2022-12-19-Type-Styles-6f6c90eb449248b7a954e234b718137f

$font-colors: (
  "on-light-900": $color-gray-900,
  "on-light-800": $color-gray-800,
  "on-light-700": $color-gray-700,
  "on-light-600": $color-gray-600,

  "on-dark": $white,

  "text-clickable": $color-eggplant-700,
);

// > We can append t-shirt sizes to text styles where variants are needed.

// size: skate rem
// 1rem = 16px
$font-sizes: (
  // 24px
  "xl": 1.5rem,
  // 20px
  "l": 1.25rem,
  // 16px
  "m": 1rem,
  // 14px
  "s": 0.875rem,
  // 12px
  "xs": 0.75rem,
  // 10px
  "xxs": 0.625rem
);

// > We can specify font-weight with plain language: bold, semi-bold.
// > Non-specified text styles are always regular.
$font-weights: (
  "reg": 400,
  // "regular"
  "semi": 600,
  // "semi-bold"
  "bold": 700,
  // "bold"
);

// TODO: Cartesian Product of Related Sizes/Weights/Colors
// TODO: {type}-{size}-{weight}
:root {
  @each $size, $font-size in $font-sizes {
    --font-size-#{$size}: #{$font-size};
  }

  @each $weight, $font-weight in $font-weights {
    --font-weight-#{$weight}: #{$font-weight};
  }

  @each $name, $font-color in $font-colors {
    --font-color-#{$name}: #{$font-color};
  }
}

@each $size, $size_value in $font-sizes {
  @each $weight, $weight_value in $font-weights {
    .font-#{$size}-#{$weight} {
      font-size: var(--font-size-#{$size}, $size_value);
      font-weight: var(--font-weight-#{$weight}, $weight_value);
    }
  }
}

.content {
  color: var(--font-color-on-light-800);
}

.label {
  color: var(--font-color-on-light-700);
}

.vehicle-label {
  font-weight: var(--font-weight-bold);
  font-size: var(--font-size-xl);
}

.vehicle-variant {
  font-weight: var(--font-weight-semi);
}

.kv-key {
  text-transform: capitalize;
  color: var(--font-color-on-light-800);
}

.kv-value {
  color: var(--font-color-on-light-700);
}

.kv-value--clickable {
  color: var(--font-color-text-clickable);
  font-weight: var(--font-weight-semi);
  text-decoration: underline;

  &:hover {
    color: $color-eggplant-500;
  }

  &:focus {
    color: $color-eggplant-500;
    border: 1px solid $color-eggplant-700;
    border-radius: 3px;
  }
}

.headsign {
  font-weight: var(--font-weight-semi);
  font-size: var(--font-size-m);
  line-height: 1.25;
  color: var(--font-color-on-light-800);
}

/* Button/Small-s-semi */

.button-small {
  font-weight: 500;
  font-size: var(--font-size-s);
  line-height: 1;
  padding: 4px 6px !important;
}

/* Input Submit Button */

.button-submit {
  color: $white;
  background-color: $color-eggplant-700;

  &:hover {
    background-color: $color-eggplant-500;
  }

  &:focus {
    background-color: $color-eggplant-500;
    border: 2px solid $color-eggplant-700;
  }

  &:disabled {
    background-color: $color-gray-600;
  }
}

/* Search Filters */

.button-search-filter {
  font-size: var(--font-size-s);
  font-weight: var(--font-weight-bold);
  color: var(--font-color-on-light-600);
  background-color: $color-gray-50;

  border-radius: 4px;

  input:checked + & {
    color: var(--font-color-on-dark);
    background-color: $color-eggplant-700;
  }

  &:hover {
    color: var(--font-color-on-dark);
    background-color: $color-eggplant-500;
  }

  &:focus {
    color: var(--font-color-on-light-700);
    border: 1px solid $color-eggplant-500;
  }
}

.button-text {
  color: $color-eggplant-700;
  font-size: var(--font-size-s);
  font-weight: var(--font-weight-semi);
  padding: 0;
  text-decoration: none;

  &:hover {
    color: $color-eggplant-500;
  }

  &:focus {
    color: $color-eggplant-500;
    border: 1px solid $color-eggplant-700;
    border-radius: 3px;
  }
}

.title-case {
  text-transform: capitalize;
}
// #endregion
