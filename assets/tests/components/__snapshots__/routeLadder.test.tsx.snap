// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`routeLadder displays loading if we are fetching the timepoints 1`] = `
Array [
  <div
    className="m-route-ladder__header"
  >
    <button
      className="m-close-button"
      onClick={[Function]}
    >
      <span
        className=""
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
    </button>
    <div
      className="m-route-ladder__route-name"
    >
      28
    </div>
  </div>,
  <div
    className="m-route-ladder__controls"
  >
    <button
      className="m-route-ladder__reverse"
      onClick={[Function]}
    >
      <span
        className="m-route-ladder__reverse-icon"
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
      Reverse
    </button>
  </div>,
  "loading...",
]
`;

exports[`routeLadder renders a route ladder 1`] = `
Array [
  <div
    className="m-route-ladder__header"
  >
    <button
      className="m-close-button"
      onClick={[Function]}
    >
      <span
        className=""
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
    </button>
    <div
      className="m-route-ladder__route-name"
    >
      28
    </div>
  </div>,
  <div
    className="m-route-ladder__controls"
  >
    <button
      className="m-route-ladder__reverse"
      onClick={[Function]}
    >
      <span
        className="m-route-ladder__reverse-icon"
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
      Reverse
    </button>
  </div>,
  <div
    className="m-layover-box m-layover-box--top"
  />,
  <div
    className="m-ladder"
    style={
      Object {
        "width": 184,
      }
    }
  >
    <svg
      className="m-ladder__svg"
      height={0}
      viewBox="-92 -20 184 0"
      width={184}
    >
      <line
        className="m-ladder__line"
        x1={-40}
        x2={-40}
        y1="0"
        y2={-40}
      />
      <line
        className="m-ladder__line"
        x1={40}
        x2={40}
        y1="0"
        y2={-40}
      />
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-0}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-0}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MATPN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-0}
      >
        MATPN
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-20}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-20}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="WELLH Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-20}
      >
        WELLH
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-40}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-40}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MORTN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-40}
      >
        MORTN
      </text>
    </svg>
    <div
      className="__react_component_tooltip place-top type-dark"
      data-id="tooltip"
    />
  </div>,
  <div
    className="m-layover-box m-layover-box--bottom"
  />,
  <div
    className="m-incoming-box"
  />,
]
`;

exports[`routeLadder renders a route ladder with laying over vehicles 1`] = `
Array [
  <div
    className="m-route-ladder__header"
  >
    <button
      className="m-close-button"
      onClick={[Function]}
    >
      <span
        className=""
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
    </button>
    <div
      className="m-route-ladder__route-name"
    >
      28
    </div>
  </div>,
  <div
    className="m-route-ladder__controls"
  >
    <button
      className="m-route-ladder__reverse"
      onClick={[Function]}
    >
      <span
        className="m-route-ladder__reverse-icon"
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
      Reverse
    </button>
  </div>,
  <div
    className="m-layover-box m-layover-box--top"
  >
    <div
      className="m-layover-box__vehicle"
      onClick={[Function]}
    >
      <svg
        style={
          Object {
            "height": 27.72,
            "width": 26,
          }
        }
        viewBox="-13 -8.36 26 27.72"
      >
        <g
          className="m-vehicle-icon m-vehicle-icon--small on-time"
        >
          <rect
            className="m-vehicle-icon__label-background"
            height={11}
            rx={5.5}
            ry={5.5}
            width={26}
            x={-13}
            y={7.359999999999999}
          />
          <text
            className="m-vehicle-icon__label m-vehicle-icon__label--normal"
            dominantBaseline="central"
            textAnchor="middle"
            x="0"
            y={12.86}
          >
            2
          </text>
          <path
            className="m-vehicle-icon__triangle"
            d="m27.34 9.46 16.84 24.54a4.06 4.06 0 0 1 -1 5.64 4.11 4.11 0 0 1 -2.3.71h-33.72a4.06 4.06 0 0 1 -4.06-4.11 4 4 0 0 1 .72-2.24l16.84-24.54a4.05 4.05 0 0 1 5.64-1.05 4 4 0 0 1 1.04 1.05z"
            transform="scale(0.38) rotate(270) translate(-24,-22)"
          />
        </g>
      </svg>
    </div>
  </div>,
  <div
    className="m-ladder"
    style={
      Object {
        "width": 184,
      }
    }
  >
    <svg
      className="m-ladder__svg"
      height={0}
      viewBox="-92 -20 184 0"
      width={184}
    >
      <line
        className="m-ladder__line"
        x1={-40}
        x2={-40}
        y1="0"
        y2={-40}
      />
      <line
        className="m-ladder__line"
        x1={40}
        x2={40}
        y1="0"
        y2={-40}
      />
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-0}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-0}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MATPN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-0}
      >
        MATPN
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-20}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-20}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="WELLH Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-20}
      >
        WELLH
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-40}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-40}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MORTN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-40}
      >
        MORTN
      </text>
    </svg>
    <div
      className="__react_component_tooltip place-top type-dark"
      data-id="tooltip"
    />
  </div>,
  <div
    className="m-layover-box m-layover-box--bottom"
  >
    <div
      className="m-layover-box__vehicle"
      onClick={[Function]}
    >
      <svg
        style={
          Object {
            "height": 27.72,
            "width": 26,
          }
        }
        viewBox="-13 -8.36 26 27.72"
      >
        <g
          className="m-vehicle-icon m-vehicle-icon--small on-time"
        >
          <rect
            className="m-vehicle-icon__label-background"
            height={11}
            rx={5.5}
            ry={5.5}
            width={26}
            x={-13}
            y={7.359999999999999}
          />
          <text
            className="m-vehicle-icon__label m-vehicle-icon__label--normal"
            dominantBaseline="central"
            textAnchor="middle"
            x="0"
            y={12.86}
          >
            1
          </text>
          <path
            className="m-vehicle-icon__triangle"
            d="m27.34 9.46 16.84 24.54a4.06 4.06 0 0 1 -1 5.64 4.11 4.11 0 0 1 -2.3.71h-33.72a4.06 4.06 0 0 1 -4.06-4.11 4 4 0 0 1 .72-2.24l16.84-24.54a4.05 4.05 0 0 1 5.64-1.05 4 4 0 0 1 1.04 1.05z"
            transform="scale(0.38) rotate(90) translate(-24,-22)"
          />
          <text
            className="m-vehicle-icon__variant"
            dominantBaseline="central"
            textAnchor="start"
            x={-5.6}
            y={0}
          >
            4
          </text>
        </g>
      </svg>
    </div>
  </div>,
  <div
    className="m-incoming-box"
  />,
]
`;

exports[`routeLadder renders a route ladder with vehicles 1`] = `
Array [
  <div
    className="m-route-ladder__header"
  >
    <button
      className="m-close-button"
      onClick={[Function]}
    >
      <span
        className=""
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
    </button>
    <div
      className="m-route-ladder__route-name"
    >
      28
    </div>
  </div>,
  <div
    className="m-route-ladder__controls"
  >
    <button
      className="m-route-ladder__reverse"
      onClick={[Function]}
    >
      <span
        className="m-route-ladder__reverse-icon"
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
      Reverse
    </button>
  </div>,
  <div
    className="m-layover-box m-layover-box--top"
  />,
  <div
    className="m-ladder"
    style={
      Object {
        "width": 232,
      }
    }
  >
    <svg
      className="m-ladder__svg"
      height={0}
      viewBox="-116 -20 232 0"
      width={232}
    >
      <line
        className="m-ladder__scheduled-line on-time"
        x1={-63}
        x2={-40}
        y1={-40}
        y2={-40}
      />
      <g>
        <g
          className="m-ladder__vehicle  "
          onClick={[Function]}
          transform="translate(87,-10)"
        >
          <g
            className="m-vehicle-icon m-vehicle-icon--medium on-time"
          >
            <rect
              className="m-vehicle-icon__label-background"
              height={11}
              rx={5.5}
              ry={5.5}
              width={26}
              x={-13}
              y={11.5}
            />
            <text
              className="m-vehicle-icon__label m-vehicle-icon__label--normal"
              dominantBaseline="central"
              textAnchor="middle"
              x="0"
              y={17}
            >
              1
            </text>
            <path
              className="m-vehicle-icon__triangle"
              d="m27.34 9.46 16.84 24.54a4.06 4.06 0 0 1 -1 5.64 4.11 4.11 0 0 1 -2.3.71h-33.72a4.06 4.06 0 0 1 -4.06-4.11 4 4 0 0 1 .72-2.24l16.84-24.54a4.05 4.05 0 0 1 5.64-1.05 4 4 0 0 1 1.04 1.05z"
              transform="scale(0.625) rotate(0) translate(-24,-22)"
            />
            <text
              className="m-vehicle-icon__variant"
              dominantBaseline="alphabetic"
              textAnchor="middle"
              x={0}
              y={8.5}
            >
              4
            </text>
          </g>
        </g>
      </g>
      <g>
        <g
          className="m-ladder__vehicle  "
          onClick={[Function]}
          transform="translate(63,-40)"
        >
          <g
            className="m-vehicle-icon m-vehicle-icon--medium ghost"
          >
            <rect
              className="m-vehicle-icon__label-background"
              height={11}
              rx={5.5}
              ry={5.5}
              width={26}
              x={-13}
              y={11.5}
            />
            <text
              className="m-vehicle-icon__label m-vehicle-icon__label--normal"
              dominantBaseline="central"
              textAnchor="middle"
              x="0"
              y={17}
            >
              0123
            </text>
            <g
              transform="scale(0.4375) translate(-24,-23)"
            >
              <path
                className="m-vehicle-icon__ghost-highlight"
                d="m43.79 19c0-9.68-8.79-17.49-19.59-17.49s-19.6 7.81-19.6 17.49v12.88 11a2 2 0 0 0 2.55 1.87l6.78-4.09 10.27 5.92 10.26-5.88 6.78 4.09a2 2 0 0 0 2.55-1.87z"
                stroke-join="round"
              />
              <path
                className="m-vehicle-icon__ghost-body"
                d="m43.79 19c0-9.68-8.79-17.49-19.59-17.49s-19.6 7.81-19.6 17.49v12.88 11a2 2 0 0 0 2.55 1.87l6.78-4.09 10.27 5.92 10.26-5.88 6.78 4.09a2 2 0 0 0 2.55-1.87z"
                stroke-join="round"
              />
              <ellipse
                className="m-vehicle-icon__ghost-eye"
                cx="19.73"
                cy="22.8"
                rx="3.11"
                ry="3.03"
              />
              <ellipse
                className="m-vehicle-icon__ghost-eye"
                cx="35.29"
                cy="22.8"
                rx="3.11"
                ry="3.03"
              />
            </g>
          </g>
        </g>
      </g>
      <g>
        <g
          className="m-ladder__vehicle  "
          onClick={[Function]}
          transform="translate(-63,-40)"
        >
          <g
            className="m-vehicle-icon m-vehicle-icon--medium on-time"
          >
            <rect
              className="m-vehicle-icon__label-background"
              height={11}
              rx={5.5}
              ry={5.5}
              width={26}
              x={-13}
              y={-22.5}
            />
            <text
              className="m-vehicle-icon__label m-vehicle-icon__label--normal"
              dominantBaseline="central"
              textAnchor="middle"
              x="0"
              y={-17}
            >
              2
            </text>
            <path
              className="m-vehicle-icon__triangle"
              d="m27.34 9.46 16.84 24.54a4.06 4.06 0 0 1 -1 5.64 4.11 4.11 0 0 1 -2.3.71h-33.72a4.06 4.06 0 0 1 -4.06-4.11 4 4 0 0 1 .72-2.24l16.84-24.54a4.05 4.05 0 0 1 5.64-1.05 4 4 0 0 1 1.04 1.05z"
              transform="scale(0.625) rotate(180) translate(-24,-22)"
            />
          </g>
        </g>
      </g>
      <line
        className="m-ladder__line"
        x1={-40}
        x2={-40}
        y1="0"
        y2={-40}
      />
      <line
        className="m-ladder__line"
        x1={40}
        x2={40}
        y1="0"
        y2={-40}
      />
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-0}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-0}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MATPN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-0}
      >
        MATPN
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-20}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-20}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="WELLH Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-20}
      >
        WELLH
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-40}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-40}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MORTN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-40}
      >
        MORTN
      </text>
    </svg>
    <div
      className="__react_component_tooltip place-top type-dark"
      data-id="tooltip"
    />
  </div>,
  <div
    className="m-layover-box m-layover-box--bottom"
  />,
  <div
    className="m-incoming-box"
  />,
]
`;

exports[`routeLadder renders a route ladder with vehicles in the incoming box 1`] = `
Array [
  <div
    className="m-route-ladder__header"
  >
    <button
      className="m-close-button"
      onClick={[Function]}
    >
      <span
        className=""
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
    </button>
    <div
      className="m-route-ladder__route-name"
    >
      28
    </div>
  </div>,
  <div
    className="m-route-ladder__controls"
  >
    <button
      className="m-route-ladder__reverse"
      onClick={[Function]}
    >
      <span
        className="m-route-ladder__reverse-icon"
        dangerouslySetInnerHTML={
          Object {
            "__html": "SVG",
          }
        }
      />
      Reverse
    </button>
  </div>,
  <div
    className="m-layover-box m-layover-box--top"
  />,
  <div
    className="m-ladder"
    style={
      Object {
        "width": 184,
      }
    }
  >
    <svg
      className="m-ladder__svg"
      height={0}
      viewBox="-92 -20 184 0"
      width={184}
    >
      <line
        className="m-ladder__line"
        x1={-40}
        x2={-40}
        y1="0"
        y2={-40}
      />
      <line
        className="m-ladder__line"
        x1={40}
        x2={40}
        y1="0"
        y2={-40}
      />
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-0}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-0}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MATPN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-0}
      >
        MATPN
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-20}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-20}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="WELLH Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-20}
      >
        WELLH
      </text>
      <circle
        className="m-ladder__stop-circle"
        cx={-40}
        cy={-40}
        r="3"
      />
      <circle
        className="m-ladder__stop-circle"
        cx={40}
        cy={-40}
        r="3"
      />
      <text
        className="m-ladder__timepoint-name"
        data-event="click"
        data-tip="MORTN Name"
        dominantBaseline="middle"
        textAnchor="middle"
        x="0"
        y={-40}
      >
        MORTN
      </text>
    </svg>
    <div
      className="__react_component_tooltip place-top type-dark"
      data-id="tooltip"
    />
  </div>,
  <div
    className="m-layover-box m-layover-box--bottom"
  />,
  <div
    className="m-incoming-box"
  >
    <button
      className="m-incoming-box__vehicle "
      onClick={[Function]}
    >
      <svg
        style={
          Object {
            "height": 15.2,
            "width": 16.72,
          }
        }
        viewBox="-8.36 -7.6 16.72 15.2"
      >
        <g
          className="m-vehicle-icon m-vehicle-icon--small on-time"
        >
          <path
            className="m-vehicle-icon__triangle"
            d="m27.34 9.46 16.84 24.54a4.06 4.06 0 0 1 -1 5.64 4.11 4.11 0 0 1 -2.3.71h-33.72a4.06 4.06 0 0 1 -4.06-4.11 4 4 0 0 1 .72-2.24l16.84-24.54a4.05 4.05 0 0 1 5.64-1.05 4 4 0 0 1 1.04 1.05z"
            transform="scale(0.38) rotate(0) translate(-24,-22)"
          />
          <text
            className="m-vehicle-icon__variant"
            dominantBaseline="alphabetic"
            textAnchor="middle"
            x={0}
            y={5.6}
          >
            4
          </text>
        </g>
      </svg>
      <div
        className="m-incoming-box__vehicle-label"
      >
        1
      </div>
    </button>
    <button
      className="m-incoming-box__vehicle "
      onClick={[Function]}
    >
      <svg
        style={
          Object {
            "height": 15.2,
            "width": 16.72,
          }
        }
        viewBox="-8.36 -7.6 16.72 15.2"
      >
        <g
          className="m-vehicle-icon m-vehicle-icon--small on-time"
        >
          <path
            className="m-vehicle-icon__triangle"
            d="m27.34 9.46 16.84 24.54a4.06 4.06 0 0 1 -1 5.64 4.11 4.11 0 0 1 -2.3.71h-33.72a4.06 4.06 0 0 1 -4.06-4.11 4 4 0 0 1 .72-2.24l16.84-24.54a4.05 4.05 0 0 1 5.64-1.05 4 4 0 0 1 1.04 1.05z"
            transform="scale(0.38) rotate(180) translate(-24,-22)"
          />
        </g>
      </svg>
      <div
        className="m-incoming-box__vehicle-label"
      >
        2
      </div>
    </button>
  </div>,
]
`;
